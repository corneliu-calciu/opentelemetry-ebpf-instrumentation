# Build the testserver binary
# Docker command must be invoked from the projec root directory
FROM golang:1.25@sha256:8305f5fa8ea63c7b5bc85bd223ccc62941f852318ebfbd22f53bbd0b358c07e1 AS builder

ARG TARGETARCH

ENV GOARCH=$TARGETARCH
ENV CGO_ENABLED=1

WORKDIR /src

# Copy the go manifests and source
COPY test/ test/
COPY go.mod go.mod
COPY go.sum go.sum

# Build/link statically with CGO, external static linking
RUN go build -tags -a -ldflags '-linkmode external -extldflags "-static"' -o testserver ./test/integration/components/testserver/testserver.go

# Create final image from minimal + built binary
#TODO: use minimal image
FROM debian:12@sha256:93492d1405a072c9d3b89110490e330e0b7eb37754cafc9520908b7fe6873f5f

WORKDIR /
RUN mkdir -p x509
COPY --from=builder /src/test/integration/components/testserver/x509/server_test_cert.pem x509
COPY --from=builder /src/test/integration/components/testserver/x509/server_test_key.pem x509
COPY --from=builder /src/testserver .
USER 0:0

CMD [ "/testserver" ]
